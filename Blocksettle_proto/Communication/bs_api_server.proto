/*

***********************************************************************************
* Copyright (C) 2020 - 2021, BlockSettle AB
* Distributed under the GNU Affero General Public License (AGPL v3)
* See LICENSE or http://www.gnu.org/licenses/agpl.html
*
**********************************************************************************

*/
syntax = "proto3";

package Blocksettle.Communication.ApiServer;

import "bs_types.proto";
import "market_data_history.proto";

enum UserControlStatus
{
    UC_STATUS_INVALID = 0;
    UC_STATUS_WAITING_SIGN = 10;
    UC_STATUS_TIMEOUT = 20;
    UC_STATUS_CANCELLED = 21;
    UC_STATUS_SERVER_ERROR = 22;
    UC_STATUS_ACCOUNT_NOT_FOUND = 23;
    UC_STATUS_REGISTRATION_FAILED = 24;
    UC_STATUS_ACCOUNT_NOT_VERIFIED = 25;
    UC_STATUS_SUCCESS = 30;
}

enum ErrorCode
{
    NO_ERROR_CODE = 0;
    ERROR_CODE_SERVER_ERROR = 1;
    ERROR_CODE_INVALID_REQUEST = 2;
}

enum AccountType
{
    ALL = 0;
    BANK = 1;
    CARD = 2;
}

message ExternalAccountInfo
{
    message Provider
    {
        string card_type = 1;
        string last_four_digits = 2;
        string product = 3;
    }

    string name         = 1;
    string created_at   = 2;
    string bank_name    = 3;
    int32 account_id = 4;
    AccountType account_type = 5;
    Provider provider = 6;
}

message Order
{
   // order_id is set from FS position ID
   string               id             = 1;
   bs.types.OrderStatus status         = 2;
   string               status_text    = 3;
   double               timestamp      = 4;
   string               product_type   = 5;
   bs.types.Side        side           = 6;
   string               quantity       = 7;
   string               price          = 8;
   string               cut_off_price  = 9;
   string               trade_im       = 10;
   bool                 is_rollover    = 11;
   string               trade_pnl      = 12;
}

message ApiKey
{
    int32 id = 1;
    string token = 2;
    string allow = 3;
    string label = 4;
    string created = 5;
}

message OhlcCandle
{
    double timestamp = 1;
    double open      = 2;
    double high      = 3;
    double low       = 4;
    double close     = 5;
    uint64 trades    = 6;
    double volume    = 7;
};

message Empty
{}

message StreamPriceData
{
    string volume = 1;
    string ask    = 2;
    string bid    = 3;
}

message SubmitPricesData
{
   string                     product_type   = 1;
   repeated StreamPriceData   prices         = 2;
}


message Request
{
    message Authorize
    {
        string phone = 1;
        bs.types.Token  token = 2;	// optional
    }

    message ResumeSession
    {
        string session_id = 1;
    }

    message MarketOrder
    {
        string          amount               = 1;
        bs.types.Side   side                 = 2;
        string          product_type         = 3;
        string          user_expected_price  = 4;
        bool            max_amount           = 5;
    }

    message LoadOrders
    {
       string product_type = 1;
    }

    message Subscribe
    {
        string product_type = 1;
    }

    message Unsubscribe
    {
        string product_type = 1;
    }

    message TradingDay
    {
        string product_type = 1;
    }

    message EstimateIm
    {
        string product_type = 1;
        string qty = 2;
        bs.types.Side side = 3;
    }

    message ProductFee
    {
        string product_type = 1;
    }

    message MaxTradeAmount
    {
        string product_type = 1;
        bs.types.Side side = 2;
    }

    message TradingStats
    {
        string product_type = 1;
    }

    message RevokeAddress
    {
        string address = 1;
    }

    message CreateIbanAgreementUrl
    {
        string country_short_code = 1;
        string iban = 2;
        string redirect = 3;
        bool sandbox = 4;
    }

    message GetIbanAccounts
    {
        string requisitions_id = 1;
    }

    message GetIbanAccountDetails
    {
        string account_ref = 1;
    }

    message WhitelistedAddressRequest
    {
        string  address         = 1;
        string  description     = 2;
    }

    message NewApiKey
    {
        string label = 1;
        string ip = 2;
    }

    message DeleteApiKey
    {
        int32 key_id = 1;
    }

    message CreateExternalAccount
    {
        string account_ref = 1;
    }

    message GetAllExternalAccounts
    {
        AccountType account_type = 1;
    }

    message WithdrawToExternalAccount
    {
        string account_name = 1;
        string amount = 2;
        string ccy = 3;
    }

    message WithdrawBitcoin
    {
        string address = 1;
        string eur_amount = 2;
        string xbt_receive_amount = 3;
        string fee_amount = 4;
        string price = 5;
    }

    message HistoricalPL
    {
        string product_type = 1;
        double start_time = 2;
        double end_time = 3;
        string reference = 4;
    }

    message TradeHistory
    {
        uint32 limit = 1;
        uint32 offset = 2;
        double start_time = 3;
        double end_time = 4;
    }

    message TransactionsForEntity
    {
        uint32 limit = 1;
        uint32 offset = 2;
    }

    message TradeFeeForEntity
    {
        uint32 limit = 1;
        uint32 offset = 2;
    }

    message GetStatementDates
    {
        string start_date = 1;
        string end_date = 2;
    }

    message GetStatements
    {
        string date = 1;
    }

    message Ohlc
    {
        string                                     product_type   = 1;
        MarketDataHistory.FuturesCandleIntervals   interval       = 2;
        uint32                                     count          = 3;
        double                                     timestamp_end  = 4;
    };

    message SubscribeTradeCreated
    {
        string product_type = 1;
    }

    message RegisterBasicAccount
    {
        string phone = 1;
        bool include_app_hash = 2;
    }

    message VerifyBasicAccount
    {
        string code = 1;
    }

    message LoginBasicAccount
    {
        string token = 1;
    }

    message UpgradeBasicAccount
    {
        string token = 1;
    }

    message ListClientBanks
    {
        string country_code = 1;
    }

    message BankOnboardingLink
    {
        string bank_id = 1;
        string redirect_url = 2;
        bool sandbox = 3;
    }

    message ListRemoteAccounts
    {
        string req_id = 1;
    }

    message SaveAccount
    {
        string account_ref = 1;
    }

    message RequestAddCard
    {
        bool mobile = 1;
    }

    message ConfirmCard
    {
        string payment_ref = 1;
    }

    message ChargeCard
    {
        int32 account_id = 1;
        string amount = 2;
    }

    message RegisterFcm
    {
        string token = 1;
    }

    message UnregisterFcm
    {
        string token = 1;
    }

    oneof data
    {
        Authorize                   authorize                   = 10;
        ResumeSession               resume_session              = 14;
        Empty                       logout                      = 15;
        MarketOrder                 market_order                = 16;
        LoadOrders                  load_orders                 = 17;
        Empty                       load_balance                = 18;
        Subscribe                   subscribe                   = 19;
        Unsubscribe                 unsubscribe                 = 20;
        TradingDay                  trading_day                 = 21;
        EstimateIm                  estimate_im                 = 22;
        ProductFee                  product_fee                 = 23;
        MaxTradeAmount              max_trade_amount            = 24;
        TradingStats                trading_stats               = 25;

        SubmitPricesData            submit_prices               = 26;
        bs.types.PullPricesData     pull_prices                 = 27;

        WhitelistedAddressRequest   submit_address              = 28;
        Empty                       load_addresses              = 29;
        RevokeAddress               revoke_address              = 30;
        Empty                       load_deposit_address        = 31;
        CreateIbanAgreementUrl      create_iban_agreement       = 32;
        GetIbanAccounts             get_iban_accounts           = 33;
        GetIbanAccountDetails       get_iban_account_details    = 34;
        NewApiKey                   new_api_key                 = 35;
        Empty                       list_api_keys               = 36;
        DeleteApiKey                delete_api_key              = 37;
        Empty                       get_deposit_info                = 38;
        CreateExternalAccount       create_external_account         = 39;
        GetAllExternalAccounts      get_all_external_accounts       = 40;
        WithdrawToExternalAccount   withdraw_to_external_account    = 41;
        WithdrawBitcoin             withdraw_bitcoin                = 42;
        Empty                       subscribe_withdraw_prices       = 43;
        Empty                       unsubscribe_withdraw_prices     = 44;
        HistoricalPL                historical_profit_loss      = 45;
        TradeHistory                trade_history               = 46;
        TransactionsForEntity       transactions_for_entity     = 47;
        TradeFeeForEntity           trade_fee_for_entity        = 48;
        GetStatementDates           get_statement_dates         = 49;
        GetStatements               get_statements              = 50;
        Ohlc                        ohlc                        = 51;
        SubscribeTradeCreated       subscribe_trade_created     = 52;
        RegisterBasicAccount        register_basic_account      = 53;
        VerifyBasicAccount          verify_basic_account        = 54;
        LoginBasicAccount           login_basic_account         = 55;
        UpgradeBasicAccount         upgrade_basic_account       = 56;
        ListClientBanks             list_client_banks           = 57;
        BankOnboardingLink          bank_onboarding_link        = 58;
        ListRemoteAccounts          list_remote_accounts        = 59;
        SaveAccount                 save_account                = 60;
        RequestAddCard              request_add_card            = 61;
        ConfirmCard                 confirm_card                = 62;
        ChargeCard                  charge_card                 = 63;
        RegisterFcm                 register_fcm                = 64;
        UnregisterFcm               unregister_fcm              = 65;
    }
}

message Response
{
    message Authorize
    {
        bool success = 1;
        string session_id = 2;
        string account_name = 3;
        int32  validity = 4;
    }

    message ResumeSession
    {
        bool success = 1;
        string account_name = 2;
        string token = 3;
        int32  validity = 4;
    }

    message MarketOrder
    {
        bool   success     = 1;
        // id is FS position ID
        string id          = 2;
        string error_msg   = 3;
        string price       = 4;
    }

    message LoadOrders
    {
        repeated Order orders = 1;
    }

    message LoadBalance
    {
        repeated bs.types.Balance balances = 1;
    }

    message Subscribe
    {
        string product_type = 1;
        bool success = 2;
        string error_msg = 3;
    }

    message Unsubscribe
    {
        string product_type = 1;
        bool success = 2;
        string error_msg = 3;
    }

    message TradingDay
    {
        string product_type = 1;
        double time_to_cut_off = 2;
        double cut_off_at = 3;
        string last_cut_off_price = 4;
    }

    message EstimateIm
    {
        bool success = 1;
        string error_msg = 2;

        string expected_im_reservation = 10;
        string fee_amount = 12;
        string product_type = 14;
    }

    message ProductFee
    {
        bool   success           = 1;
        string error_msg         = 2;
        string product_type      = 3;
        string fee               = 4;
        string dealer_commission = 5;
        string fee_ccy           = 6;
        string im                = 7;
    }

    message MaxTradeAmount
    {
        bool success = 5;
        string error_msg = 6;
        string product_type = 1;
        bs.types.Side side = 2;
        string qty = 3;
        string fee = 4;
    }

    message TradingStats
    {
        string product_type   = 1;
        string daily_volume   = 2;
        string open_interest  = 3;
    }

    message CreateIbanAgreementUrl
    {
        bool error = 1;
        string message = 2;
        string ref = 3;
        string initiate = 4;
    }

    message GetIbanAccounts
    {
        bool loaded = 1;
        repeated string results = 2;
    }

    message GetIbanAccountDetails
    {
        bool    loaded              = 1;
        string  resource_id         = 2;
        string  iban                = 3;
        string  currency            = 4;
        string  name                = 5;
        string  product             = 6;
        string  cash_account_type   = 7;
        string  account_ref         = 8;
    }

    message OrderUpdate
    {
        Order order = 1;
        bs.types.Action action = 2;
    }

    message MarketData
    {
        string    product_type   = 1;
        string    live_cutoff    = 2;
        string    ask            = 3;
        string    bid            = 4;
    }

    message TradingClosed
    {
        string product_type = 1;
    }

    message Error
    {
        ErrorCode error_code = 1;
        string error_msg = 2;
    }

    message SubmitAddress
    {
        string  address         = 1;
        string  description     = 2;
        bool    success         = 3;
        string  error_msg       = 4;
        double  added_timestamp = 5;
    }

    message WhitelistedAddressResponse
    {
        string  address         = 1;
        string  description     = 2;
        double  added_timestamp = 3;
    }

    message LoadAddresses
    {
        repeated WhitelistedAddressResponse addresses = 1;
    }

    message RevokeAddress
    {
        string  address     = 1;
        bool    success     = 2;
        string  error_msg   = 3;
    }

    message LoadDepositAddress
    {
        string  address  = 1;
    }

    message UserNotify
    {
        string message = 1;
        string code = 2;
        string type = 3;
    }

    message NewApiKey
    {
        bool success = 1;
        string error_msg = 2;
        ApiKey key = 3;
        string secret = 4;
    }

    message ListApiKeys
    {
        bool success = 1;
        repeated ApiKey keys = 2;
    }

    message DeleteApiKey
    {
        bool success = 1;
        string error_msg = 2;
        int32 key_id = 3;
    }

    message GetDepositInfo
    {
        bool success = 1;
        string error_msg = 2;
        string data = 3;
    }

    message ResponseResult
    {
        bool success = 1;
        string error_msg = 2;
    }

    message CreateExternalAccount
    {
        message ExternalAccountInfo
        {
            string name = 1;
            string created_at = 2;
            string bank_name = 3;
        }

        bool                success = 1;
        ExternalAccountInfo account = 2;
    }

    message GetAllExternalAccounts
    {
        bool success = 1;
        repeated ExternalAccountInfo accounts = 2;
        AccountType account_type = 3;
    }

    message ObligationRequest
    {
        string   delivery_id    = 1;
        string   currency       = 2;
        string   amount         = 3;
        string   bs_address     = 4;
    }

    message UpdateWithdrawPrices
    {
        string sell_price     = 1;
        string buy_price      = 2;
        string network_fee    = 3;
        string min_xbt_amount = 4;
   }

    message HistoricalPL
    {
        string product_type = 1;
        string profit_loss = 2;
        string reference = 3;
        bool   loaded = 4;
    }

    message TradeHistory
    {
        bool loaded = 1;
        repeated Order orders = 2;
        double start_time = 3;
        double end_time = 4;
    }

    message TransactionsForEntity
    {
        message Item
        {
            string status = 1;
            string ccy = 2;
            string description = 3;
            double amount = 5;
            double timestamp = 6;
            string type = 7;
        }

        bool loaded = 1;
        repeated Item items = 2;
        uint32 count = 3;
    }

    message TradeFeeForEntity
    {
        message Item
        {
            string fee = 1;
            string ccy = 2;
            string price = 3;
            string trade_ref = 4;
            string position_size = 5;
            double timestamp = 6;
            string side = 7;
        }

        bool loaded = 1;
        repeated Item items = 2;
    }

    message GetStatementDates
    {
        bool loaded = 1;
        repeated string dates = 2;
    }

    message GetStatements
    {
        bool loaded = 1;
        string html = 2;
        string pdf = 3;
        string date = 4;
    }

    message Ohlc
    {
        string                                     product_type         = 1;
        MarketDataHistory.FuturesCandleIntervals   interval             = 2;
        double                                     timestamp_start_db   = 3;
        repeated OhlcCandle                        candles              = 4;
    };

    message TradeCreated
    {
        string product_type = 1;
        double price = 2;
        double amount = 3;
        double timestamp = 4;
    }

    message SubmitPrices
    {
        bs.types.SubmitPriceProcessingResult    result          = 1;
        bs.types.SubmitPriceRejectReason        reject_reason   = 2;
        string                                  product_type    = 3;
        repeated StreamPriceData                rejected_prices = 4;
    }

    message RegisterBasicAccount
    {
        bool success = 1;
        string error_msg = 2;
    }

    message VerifyBasicAccount
    {
        bool success = 1;
        string error_msg = 2;
        string account_name = 3;
        string session_id = 4;
        string token = 5;
    }

    message LoginBasicAccount
    {
        bool success = 1;
        string error_msg = 2;
        string session_id = 3;
        string account_name = 4;
    }

    message UpgradeBasicAccount
    {
        string qr_code = 1;
    }

    message UpgradeBasicAccountUpd
    {
        UserControlStatus status = 1;
        string error_msg = 2;
    }

    message ListClientBanks
    {
        message Bank
        {
            int32 transaction_total_days = 1;
            repeated string countries = 2;
            string id = 3;
            string bic = 4;
            string name = 5;
            string logo = 6;
        }

        repeated Bank banks = 1;
    }

    message BankOnboardingLink
    {
        string initiate = 1;
        string req_id = 2;
    }

    message ListRemoteAccounts
    {
        string redirect = 1;
        string status = 2;
        string enduser_id = 3;
        string reference = 4;
        repeated string accounts = 5;
        repeated string agreements = 6;
        string id = 7;
    }

    message SaveAccount
    {
        bool success = 1;
        string error_msg = 2;
        ExternalAccountInfo account = 3;
    }

    message RequestAddCard
    {
        message Item
        {
            string source = 1;
            string logo_url = 2;
            string display_name = 3;
            string payment_link = 4;
        }
        repeated Item result = 1;
    }

    message ConfirmCard
    {
        bool success = 1;
        string error_msg = 2;
        ExternalAccountInfo account = 3;
    }

    message ChargeCard
    {
        bool success = 1;
        string error_msg = 2;
    }

    message RegisterFcm
    {
        bool success = 1;
        string error_msg = 2;
    }

    message UnregisterFcm
    {
        bool success = 1;
        string error_msg = 2;
    }

    oneof data
    {
        Authorize               authorize                   = 1;
        ResumeSession           resume_session              = 4;
        Empty                   logout                      = 5;
        MarketOrder             market_order                = 6;
        LoadOrders              load_orders                 = 7;
        LoadBalance             load_balance                = 8;
        Subscribe               subscribe                   = 9;
        Unsubscribe             unsubscribe                 = 10;
        TradingDay              trading_day                 = 11;
        EstimateIm              estimate_im                 = 12;
        ProductFee              product_fee                 = 13;
        MaxTradeAmount          max_trade_amount            = 14;
        TradingStats            trading_stats               = 15;
        SubmitAddress           submit_address              = 16;
        LoadAddresses           load_addresses              = 17;
        RevokeAddress           revoke_address              = 18;
        LoadDepositAddress      load_deposit_address        = 19;
        CreateIbanAgreementUrl  create_iban_agreement       = 20;
        GetIbanAccounts         get_iban_accounts           = 21;
        GetIbanAccountDetails   get_iban_account_details    = 22;
        NewApiKey               new_api_key                 = 23;
        ListApiKeys             list_api_keys               = 24;
        DeleteApiKey            delete_api_key              = 25;
        GetDepositInfo          get_deposit_info            = 26;
        CreateExternalAccount   create_external_account     = 27;
        GetAllExternalAccounts  get_all_external_accounts   = 28;
        ResponseResult          withdraw_to_external_account= 29;
        ResponseResult          withdraw_bitcoin            = 30;
        ObligationRequest       obligation_request          = 31;
        ResponseResult          subscribe_withdraw_prices   = 32;
        ResponseResult          unsubscribe_withdraw_prices = 33;
        MarketData              market_data                 = 34;
        Error                   fatal_error                 = 35;
        OrderUpdate             order_update                = 37;
        TradingClosed           trading_closed              = 38;
        Empty                   session_replaced            = 39;
        UserNotify              user_notify                 = 40;
        UpdateWithdrawPrices    update_withdraw_prices      = 41;
        HistoricalPL            historical_profit_loss      = 42;
        TradeHistory            trade_history               = 43;
        TransactionsForEntity   transactions_for_entity     = 44;
        TradeFeeForEntity       trade_fee_for_entity        = 45;
        GetStatementDates       get_statement_dates         = 46;
        GetStatements           get_statements              = 47;
        Ohlc                    ohlc                        = 48;
        Empty                   subscribe_trade_created     = 49;
        TradeCreated            trade_created               = 50;
        SubmitPrices            submit_prices               = 51;
        RegisterBasicAccount    register_basic_account      = 52;
        VerifyBasicAccount      verify_basic_account        = 53;
        LoginBasicAccount       login_basic_account         = 54;
        UpgradeBasicAccount     upgrade_basic_account       = 55;
        UpgradeBasicAccountUpd  upgrade_basic_account_upd   = 56;
        ListClientBanks         list_client_banks           = 57;
        BankOnboardingLink      bank_onboarding_link        = 58;
        ListRemoteAccounts      list_remote_accounts        = 59;
        SaveAccount             save_account                = 60;
        RequestAddCard          request_add_card            = 61;
        ConfirmCard             confirm_card                = 62;
        ChargeCard              charge_card                 = 63;
        RegisterFcm             register_fcm                = 64;
        UnregisterFcm           unregister_fcm              = 65;
    }
}
