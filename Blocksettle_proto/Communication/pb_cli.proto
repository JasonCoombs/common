/*

***********************************************************************************
* Copyright (C) 2018 - 2021, BlockSettle AB
* Distributed under the GNU Affero General Public License (AGPL v3)
* See LICENSE or http://www.gnu.org/licenses/agpl.html
*
**********************************************************************************

*/
syntax = "proto3";

package Blocksettle.Communication.pbcli;

import "bs_types.proto";

enum CLIRequestType
{
   ErrorMessageType                 = 0;
   GetStatusMessageType             = 1;
   LoadUTXOMessageType              = 2;
   CheckAuthAddressMessageType      = 3;
   ReloadWalletMessageType          = 4;
   SendCCTokenMessageType           = 5;
   AuthVerificationTransactionType  = 6;
   AuthRevokeTransactionType        = 7;
   CCDistributionTransactionType    = 8;
   AuthVerificationRejectedType     = 9;
   GetRequestsStatType              = 10;
   GetPendingSettlementsInfo        = 11;
   SetInitialPMPriceType            = 12;
   DisablePMProductType             = 13;
   ExportRequestsType               = 14;
   ChangeUserStatusType             = 15;
   LoadConfigType                   = 16;
   SetConfigType                    = 17;
   MigrateUserIds                   = 18;
   BroadcastBSAuthRevokeTX          = 19;
   BSDeliveryTransactionType        = 20;
   SyncGenoaUsers                   = 21;
   UsersImInfoType                  = 22;
   InstaWalletWithdrawType          = 23;
}

enum ArmoryConnectionState
{
   ArmoryConnectionOffline    = 0;
   ArmoryConnectionScanning   = 1;
   ArmoryConnectionConnected  = 2;
   ArmoryConnectionReady      = 3;
}

enum AuthAddressVerificationState
{
   VerificationFailedState    = 0;
   InProgressState            = 1;
   NotSubmittedState          = 2;
   SubmittedState             = 3;
   PendingVerificationState   = 4;
   VerificationSubmittedState = 5;
   VerifiedState              = 6;
   RevokedState               = 7;
   RevokedByBSState           = 8;
}

enum ArmoryNodeStatus
{
   NodeStatus_Offline   = 0;
   NodeStatus_Online    = 1;
   NodeStatus_OffSync   = 2;
}

enum ArmoryNodeRpcStatus
{
   RpcStatus_Disabled   = 0;
   RpcStatus_BadAuth    = 1;
   RpcStatus_Online     = 2;
   RpcStatus_Error_28   = 3;
};

message CLIRequestPacket
{
   CLIRequestType requestType = 1;
   bytes          requestData = 2;
}

message CLIResponsePacket
{
   CLIRequestType responseType = 1;
   bytes          responseData = 2;
}

message PBStatusResponse
{
   bool ConnectedToCeler         = 1;
   bool CelerMerchantConnected   = 2;
   bool CelerPiggyBankConnected  = 3;
   bool CelerStaticDataConnected = 4;

   string PBVersion              = 5;

   ArmoryConnectionState   armoryConnectionState   = 6;
   int32                   currentBlock            = 7;
   ArmoryNodeStatus        nodeStatus              = 8;
   bool                    segwitEnabled           = 9;
   ArmoryNodeRpcStatus     armoryRpcStatus         = 10;

   string uptime           = 11;
   uint64 uptime_seconds   = 12;

   bool ConnectedToMD      = 13;
   bool ConnectedToProxy   = 14;
   bool connected_to_dealer = 15;
}

message ErrorMessage
{
   string messageText = 1;
   bytes originalMessage = 2;
}

message LoadUTXOResponse
{
   repeated Transactions serializedUTXO = 1;

   float feePerByte = 2;

   message Transactions {
      string wallet = 1;
      repeated bytes  transactions = 2;
   }
}

message CheckAuthAddressRequestPacket
{
   string authAddress = 1;
}

message CheckAuthAddressResponsePacket
{
   string authAddress = 1;
   AuthAddressVerificationState verificationState = 2;
}


message ReloadWalletRequest
{
   string reason = 1;
}


message SendCCTokenRequest
{
   string userId = 1;
   string ccToken = 2;
   string ccProduct = 3;
   uint32 amount = 4;
   string request_id = 5;
}

message TransactionBroadcastResponse
{
   bool transaction_broadcasted = 1;
}

message AuthVerificationRejectReponse
{
   bool fee_released = 1;
   string debug_message = 2;
}

message GetRequestsStatResopnse
{
   uint32 submit_auth_count               = 1;
   uint32 revoke_auth_count               = 2;
   uint32 generate_cc_seed_count          = 4;
   uint32 cc_initial_distribution_count   = 5;
   uint32 delivery_tx_count               = 6;
}

message ProductStatistics
{
   string product_name = 1;
   int32  trades_count = 2;
}

message GetPendingSettlementsResponse
{
   string snapshot_date_time = 1;

   repeated ProductStatistics cc_trades = 2;
   repeated ProductStatistics xbt_trades = 3;
}

message SetInitialPMPriceRequest
{
   string product       = 1;
   double bid_price     = 2;
   double offer_price   = 3;
}

message SetInitialPMPriceResponse
{
   string   product  = 1;
   bool     result   = 2;
}

message DisablePMProductRequest
{
   string   product = 1;
}

message DisablePMProductResponse
{
   string   product  = 1;
   bool     result   = 2;
   string   message  = 3;
}

message ExportRequestsRequests
{
   string   path = 1;
}

message ExportRequestsResponse
{
   string   path           = 1;
   uint32   requests_count = 2;
   bool     result         = 3;
   string   message        = 4;
}

message ChangeUserStatusRequest
{
   string   user_email     = 1;
   bool     status_enabled = 2;
}

message ChangeUserStatusResponse
{
   string   user_email  = 1;
   int32    new_score   = 2;
   bool     processed   = 3;
}

message LoadConfigsRquest
{
   string   pattern = 1;
}

message ConfigContainer
{
   string name    = 1;
   string value   = 2;
}

message LoadConfigResponse
{
   repeated ConfigContainer config = 1;
}

message SetConfigRequest
{
   ConfigContainer config = 1;
}

message SetConfigResponse
{
   bool     result         = 1;
   string   error_message  = 2;
}

message LoadUTXORequest
{
   bool     load_all = 1;
}

message SyncAccountsResponse
{
   bool     success              = 1;
   int32    created_customers    = 2;
   int32    updated_properties   = 3;
}

message InstaWalletWithdrawRequest
{
   string                  address  = 1;
   bs.types.XBTAmountValue amount   = 2;
}

message InstaWalletWithdrawResponse
{
   bytes signed_tx = 1;
}
